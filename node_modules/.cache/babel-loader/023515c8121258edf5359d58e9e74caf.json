{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _useTimeout = _interopRequireDefault(require(\"@restart/hooks/useTimeout\"));\n\nvar _Fade = _interopRequireDefault(require(\"./Fade\"));\n\nvar _ToastHeader = _interopRequireDefault(require(\"./ToastHeader\"));\n\nvar _ToastBody = _interopRequireDefault(require(\"./ToastBody\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _ToastContext = _interopRequireDefault(require(\"./ToastContext\"));\n\nvar defaultProps = {\n  animation: true,\n  autohide: false,\n  delay: 3000,\n  show: true,\n  transition: _Fade.default\n};\n\nvar Toast = _react.default.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Transition = _ref.transition,\n      show = _ref.show,\n      animation = _ref.animation,\n      delay = _ref.delay,\n      autohide = _ref.autohide,\n      onClose = _ref.onClose,\n      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"bsPrefix\", \"className\", \"children\", \"transition\", \"show\", \"animation\", \"delay\", \"autohide\", \"onClose\"]);\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)('toast');\n  var delayRef = (0, _react.useRef)(delay);\n  var onCloseRef = (0, _react.useRef)(onClose);\n  (0, _react.useEffect)(function () {\n    // We use refs for these, because we don't want to restart the autohide\n    // timer in case these values change.\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  var autohideTimeout = (0, _useTimeout.default)();\n  var autohideFunc = (0, _react.useCallback)(function () {\n    if (!(autohide && show)) {\n      return;\n    }\n\n    onCloseRef.current();\n  }, [autohide, show]);\n  autohideTimeout.set(autohideFunc, delayRef.current);\n  var useAnimation = (0, _react.useMemo)(function () {\n    return Transition && animation;\n  }, [Transition, animation]);\n\n  var toast = _react.default.createElement(\"div\", (0, _extends2.default)({}, props, {\n    ref: ref,\n    className: (0, _classnames.default)(bsPrefix, className, !useAnimation && show && 'show'),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  }), children);\n\n  var toastContext = {\n    onClose: onClose\n  };\n  return _react.default.createElement(_ToastContext.default.Provider, {\n    value: toastContext\n  }, useAnimation ? _react.default.createElement(Transition, {\n    in: show\n  }, toast) : toast);\n});\n\nToast.defaultProps = defaultProps;\nToast.displayName = 'Toast';\nToast.Body = _ToastBody.default;\nToast.Header = _ToastHeader.default;\nvar _default = Toast;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}