{"ast":null,"code":"import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport qs from 'qs';\nimport { config } from '../services/config';\nimport { getProductData, getProductsData, getAdvertisementsData } from './data';\nvar mock = new MockAdapter(axios, {\n  delayResponse: config.delay\n}); //.networkError();\n\nmock.onGet(/\\/products.*/gi).reply(function (config) {\n  //console.log(config);\n  const query = config.url.replace('/products?', '');\n  const params = qs.parse(query);\n  const products = getProductsData(params); //console.log(products);\n\n  return [200, products];\n});\nmock.onGet(/\\/adverts.*/gi).reply(function (config) {\n  const adverts = getAdvertisementsData();\n  return [200, adverts];\n});\nmock.onGet(/\\/product\\/.*/gi).reply(function (config) {\n  const id = config.url.replace('/product/', '');\n  const product = getProductData(id);\n  return [200, product];\n});","map":{"version":3,"sources":["/Applications/MAMP/htdocs/eshop-page/src/fakebackend/axiosData.js"],"names":["axios","MockAdapter","qs","config","getProductData","getProductsData","getAdvertisementsData","mock","delayResponse","delay","onGet","reply","query","url","replace","params","parse","products","adverts","id","product"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,qBAA1C,QAAuE,QAAvE;AAEA,IAAIC,IAAI,GAAG,IAAIN,WAAJ,CAAgBD,KAAhB,EAAuB;AAAEQ,EAAAA,aAAa,EAAEL,MAAM,CAACM;AAAxB,CAAvB,CAAX,C,CAEA;;AACAF,IAAI,CAACG,KAAL,CAAW,gBAAX,EAA6BC,KAA7B,CAAmC,UAASR,MAAT,EAAiB;AAClD;AACA,QAAMS,KAAK,GAAGT,MAAM,CAACU,GAAP,CAAWC,OAAX,CAAmB,YAAnB,EAAiC,EAAjC,CAAd;AACA,QAAMC,MAAM,GAAGb,EAAE,CAACc,KAAH,CAASJ,KAAT,CAAf;AACA,QAAMK,QAAQ,GAAGZ,eAAe,CAACU,MAAD,CAAhC,CAJkD,CAKlD;;AACA,SAAO,CAAC,GAAD,EAAME,QAAN,CAAP;AACD,CAPD;AASAV,IAAI,CAACG,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC,UAASR,MAAT,EAAiB;AACjD,QAAMe,OAAO,GAAGZ,qBAAqB,EAArC;AACA,SAAO,CAAC,GAAD,EAAMY,OAAN,CAAP;AACD,CAHD;AAKAX,IAAI,CAACG,KAAL,CAAW,iBAAX,EAA8BC,KAA9B,CAAoC,UAASR,MAAT,EAAiB;AACnD,QAAMgB,EAAE,GAAGhB,MAAM,CAACU,GAAP,CAAWC,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAX;AACA,QAAMM,OAAO,GAAGhB,cAAc,CAACe,EAAD,CAA9B;AACA,SAAO,CAAC,GAAD,EAAMC,OAAN,CAAP;AACD,CAJD","sourcesContent":["import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport qs from 'qs';\n\nimport { config } from '../services/config';\nimport { getProductData, getProductsData, getAdvertisementsData } from './data';\n\nvar mock = new MockAdapter(axios, { delayResponse: config.delay });\n\n//.networkError();\nmock.onGet(/\\/products.*/gi).reply(function(config) {\n  //console.log(config);\n  const query = config.url.replace('/products?', '');\n  const params = qs.parse(query);\n  const products = getProductsData(params);\n  //console.log(products);\n  return [200, products];\n});\n\nmock.onGet(/\\/adverts.*/gi).reply(function(config) {\n  const adverts = getAdvertisementsData();\n  return [200, adverts];\n});\n\nmock.onGet(/\\/product\\/.*/gi).reply(function(config) {\n  const id = config.url.replace('/product/', '');\n  const product = getProductData(id);\n  return [200, product];\n});\n"]},"metadata":{},"sourceType":"module"}