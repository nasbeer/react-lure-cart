{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/eshop-page/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Types from '../types';\nimport { showToast } from './toast';\nimport _ from 'lodash';\nexport const setGoogleUser = googleUser => dispatch => {\n  dispatch(logoutLocalUser());\n  localStorage.setItem('googleUser', JSON.stringify(googleUser));\n  dispatch(showToast({\n    title: 'Notification',\n    text: \"Google user \".concat(googleUser.name, \" successfully logged in.\")\n  }));\n  dispatch({\n    type: Types.GOOGLE_AUTH_SUCCESS,\n    payload: googleUser\n  });\n};\nexport const getGoogleUser = () => {\n  const googleUser = JSON.parse(localStorage.getItem('googleUser'));\n  return {\n    type: Types.GET_GOOGLE_USER,\n    payload: googleUser\n  };\n};\nexport const logOutGoogleUser = () => dispatch => {\n  const googleUser = JSON.parse(localStorage.getItem('googleUser'));\n\n  if (googleUser) {\n    dispatch(showToast({\n      title: 'Notification',\n      text: \"Google user \".concat(googleUser.name, \" successfully logged out.\")\n    }));\n    localStorage.removeItem('googleUser');\n    dispatch({\n      type: Types.LOGOUT_GOOGLE_USER\n    });\n  }\n};\nexport const registerLocalUser = localUser => dispatch => {\n  dispatch(logOutGoogleUser()); // delete localUser.password;\n\n  delete localUser.repeatPassword;\n  localStorage.setItem('localUser', JSON.stringify(localUser));\n  dispatch(showToast({\n    title: 'Notification',\n    text: \"Local user \".concat(localUser.name, \" successfully registered.\")\n  }));\n  dispatch({\n    type: Types.REGISTER_LOCAL_USER,\n    payload: localUser\n  });\n};\nexport const loginLocalUser = _localUser => (dispatch, getState) => {\n  dispatch(logOutGoogleUser());\n\n  let localUser = _objectSpread({}, getState().authReducer.localUser);\n\n  localUser = _.isEmpty(localUser) ? null : localUser;\n\n  if (!localUser && _localUser.email === 'default@gmail.com' && _localUser.password === 'password') {\n    const defaultUser = {\n      name: 'DefaultName',\n      email: 'default@gmail.com',\n      password: 'password'\n    };\n    localUser = defaultUser;\n  }\n\n  if (localUser) {\n    localStorage.setItem('localUser', JSON.stringify(localUser));\n    dispatch(showToast({\n      title: 'Notification',\n      text: \"Local user \".concat(localUser.email, \" successfully logged in.\")\n    }));\n  } else {\n    dispatch(showToast({\n      title: 'Error',\n      text: \"Wrong email or password.\"\n    }));\n  }\n\n  dispatch({\n    type: Types.LOGIN_LOCAL_USER,\n    payload: localUser\n  });\n};\nexport const logoutLocalUser = () => (dispatch, getState) => {\n  const localUser = JSON.parse(localStorage.getItem('localUser'));\n\n  if (localUser) {\n    localStorage.removeItem('localUser');\n    dispatch(showToast({\n      title: 'Notification',\n      text: \"Local user \".concat(localUser.name, \" successfuly logged out.\")\n    }));\n    dispatch({\n      type: Types.LOGOUT_LOCAL_USER\n    });\n  }\n};\nexport const getLocalUser = () => {\n  const localUser = JSON.parse(localStorage.getItem('localUser'));\n  return {\n    type: Types.GET_LOCAL_USER,\n    payload: localUser\n  };\n};\nexport const redirectAfterLogin = callback => {\n  if (callback) callback();\n  return {\n    type: Types.REDIRECT_AFTER_LOGIN\n  };\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/eshop-page/src/store/actions/auth.js"],"names":["Types","showToast","_","setGoogleUser","googleUser","dispatch","logoutLocalUser","localStorage","setItem","JSON","stringify","title","text","name","type","GOOGLE_AUTH_SUCCESS","payload","getGoogleUser","parse","getItem","GET_GOOGLE_USER","logOutGoogleUser","removeItem","LOGOUT_GOOGLE_USER","registerLocalUser","localUser","repeatPassword","REGISTER_LOCAL_USER","loginLocalUser","_localUser","getState","authReducer","isEmpty","email","password","defaultUser","LOGIN_LOCAL_USER","LOGOUT_LOCAL_USER","getLocalUser","GET_LOCAL_USER","redirectAfterLogin","callback","REDIRECT_AFTER_LOGIN"],"mappings":"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","sourcesContent":["import * as Types from '../types';\nimport { showToast } from './toast';\nimport _ from 'lodash';\n\nexport const setGoogleUser = googleUser => dispatch => {\n  dispatch(logoutLocalUser());\n  localStorage.setItem('googleUser', JSON.stringify(googleUser));\n  dispatch(\n    showToast({\n      title: 'Notification',\n      text: `Google user ${googleUser.name} successfully logged in.`,\n    }),\n  );\n  dispatch({\n    type: Types.GOOGLE_AUTH_SUCCESS,\n    payload: googleUser,\n  });\n};\n\nexport const getGoogleUser = () => {\n  const googleUser = JSON.parse(localStorage.getItem('googleUser'));\n\n  return {\n    type: Types.GET_GOOGLE_USER,\n    payload: googleUser,\n  };\n};\n\nexport const logOutGoogleUser = () => dispatch => {\n  const googleUser = JSON.parse(localStorage.getItem('googleUser'));\n  if (googleUser) {\n    dispatch(\n      showToast({\n        title: 'Notification',\n        text: `Google user ${googleUser.name} successfully logged out.`,\n      }),\n    );\n    localStorage.removeItem('googleUser');\n    dispatch({\n      type: Types.LOGOUT_GOOGLE_USER,\n    });\n  }\n};\n\nexport const registerLocalUser = localUser => dispatch => {\n  dispatch(logOutGoogleUser());\n  // delete localUser.password;\n  delete localUser.repeatPassword;\n  localStorage.setItem('localUser', JSON.stringify(localUser));\n\n  dispatch(\n    showToast({\n      title: 'Notification',\n      text: `Local user ${localUser.name} successfully registered.`,\n    }),\n  );\n  dispatch({\n    type: Types.REGISTER_LOCAL_USER,\n    payload: localUser,\n  });\n};\n\nexport const loginLocalUser = _localUser => (dispatch, getState) => {\n  dispatch(logOutGoogleUser());\n\n  let localUser = { ...getState().authReducer.localUser };\n  localUser = _.isEmpty(localUser) ? null : localUser;\n  if (\n    !localUser &&\n    _localUser.email === 'default@gmail.com' &&\n    _localUser.password === 'password'\n  ) {\n    const defaultUser = {\n      name: 'DefaultName',\n      email: 'default@gmail.com',\n      password: 'password',\n    };\n    localUser = defaultUser;\n  }\n  if (localUser) {\n    localStorage.setItem('localUser', JSON.stringify(localUser));\n    dispatch(\n      showToast({\n        title: 'Notification',\n        text: `Local user ${localUser.email} successfully logged in.`,\n      }),\n    );\n  } else {\n    dispatch(\n      showToast({\n        title: 'Error',\n        text: `Wrong email or password.`,\n      }),\n    );\n  }\n  dispatch({\n    type: Types.LOGIN_LOCAL_USER,\n    payload: localUser,\n  });\n};\n\nexport const logoutLocalUser = () => (dispatch, getState) => {\n  const localUser = JSON.parse(localStorage.getItem('localUser'));\n  if (localUser) {\n    localStorage.removeItem('localUser');\n\n    dispatch(\n      showToast({\n        title: 'Notification',\n        text: `Local user ${localUser.name} successfuly logged out.`,\n      }),\n    );\n    dispatch({\n      type: Types.LOGOUT_LOCAL_USER,\n    });\n  }\n};\n\nexport const getLocalUser = () => {\n  const localUser = JSON.parse(localStorage.getItem('localUser'));\n\n  return {\n    type: Types.GET_LOCAL_USER,\n    payload: localUser,\n  };\n};\n\nexport const redirectAfterLogin = callback => {\n  if (callback) callback();\n\n  return {\n    type: Types.REDIRECT_AFTER_LOGIN,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}