{"ast":null,"code":"import faker from 'faker';\nimport _ from 'lodash';\nimport { config } from '../services/config';\n\nconst brandAndImage = _.flatten(_.times(20, i => {\n  return ['rapala', 'heddon', 'rebel', 'cottoncordel', 'mepps'].map((brand, j) => {\n    return {\n      brand,\n      image: \"\".concat(brand).concat(i + 1, \".jpg\")\n    };\n  });\n}));\n\nconst imageColorMap = [{\n  brand: 'rapala1',\n  color: 'white'\n}, {\n  brand: 'rapala2',\n  color: 'yellow'\n}, {\n  brand: 'rapala3',\n  color: 'yellow'\n}, {\n  brand: 'rapala4',\n  color: 'yellow'\n}, {\n  brand: 'rapala5',\n  color: 'red'\n}, {\n  brand: 'rapala6',\n  color: 'yellow'\n}, {\n  brand: 'rapala7',\n  color: 'green'\n}, {\n  brand: 'rapala8',\n  color: 'blue'\n}, {\n  brand: 'rapala9',\n  color: 'brown'\n}, {\n  brand: 'rapala10',\n  color: 'blue'\n}, {\n  brand: 'rapala11',\n  color: 'blue'\n}, {\n  brand: 'rapala12',\n  color: 'green'\n}, {\n  brand: 'rapala13',\n  color: 'green'\n}, {\n  brand: 'rapala14',\n  color: 'red'\n}, {\n  brand: 'rapala15',\n  color: 'green'\n}, {\n  brand: 'rapala16',\n  color: 'green'\n}, {\n  brand: 'rapala17',\n  color: 'green'\n}, {\n  brand: 'rapala18',\n  color: 'white'\n}, {\n  brand: 'rapala19',\n  color: 'green'\n}, {\n  brand: 'rapala20',\n  color: 'green'\n}, {\n  brand: 'heddon1',\n  color: 'green'\n}, {\n  brand: 'heddon2',\n  color: 'white'\n}, {\n  brand: 'heddon3',\n  color: 'white'\n}, {\n  brand: 'heddon4',\n  color: 'white'\n}, {\n  brand: 'heddon5',\n  color: 'yellow'\n}, {\n  brand: 'heddon6',\n  color: 'red'\n}, {\n  brand: 'heddon7',\n  color: 'white'\n}, {\n  brand: 'heddon8',\n  color: 'red'\n}, {\n  brand: 'heddon9',\n  color: 'black'\n}, {\n  brand: 'heddon10',\n  color: 'red'\n}, {\n  brand: 'heddon11',\n  color: 'yellow'\n}, {\n  brand: 'heddon12',\n  color: 'white'\n}, {\n  brand: 'heddon13',\n  color: 'white'\n}, {\n  brand: 'heddon14',\n  color: 'red'\n}, {\n  brand: 'heddon15',\n  color: 'white'\n}, {\n  brand: 'heddon16',\n  color: 'brown'\n}, {\n  brand: 'heddon17',\n  color: 'black'\n}, {\n  brand: 'heddon18',\n  color: 'yellow'\n}, {\n  brand: 'heddon19',\n  color: 'white'\n}, {\n  brand: 'heddon20',\n  color: 'green'\n}, {\n  brand: 'cottoncordel1',\n  color: 'white'\n}, {\n  brand: 'cottoncordel2',\n  color: 'green'\n}, {\n  brand: 'cottoncordel3',\n  color: 'yellow'\n}, {\n  brand: 'cottoncordel4',\n  color: 'white'\n}, {\n  brand: 'cottoncordel5',\n  color: 'green'\n}, {\n  brand: 'cottoncordel6',\n  color: 'white'\n}, {\n  brand: 'cottoncordel7',\n  color: 'blue'\n}, {\n  brand: 'cottoncordel8',\n  color: 'white'\n}, {\n  brand: 'cottoncordel9',\n  color: 'yellow'\n}, {\n  brand: 'cottoncordel10',\n  color: 'white'\n}, {\n  brand: 'cottoncordel11',\n  color: 'green'\n}, {\n  brand: 'cottoncordel12',\n  color: 'white'\n}, {\n  brand: 'cottoncordel13',\n  color: 'green'\n}, {\n  brand: 'cottoncordel14',\n  color: 'green'\n}, {\n  brand: 'cottoncordel15',\n  color: 'white'\n}, {\n  brand: 'cottoncordel16',\n  color: 'yellow'\n}, {\n  brand: 'cottoncordel17',\n  color: 'red'\n}, {\n  brand: 'cottoncordel18',\n  color: 'red'\n}, {\n  brand: 'cottoncordel19',\n  color: 'white'\n}, {\n  brand: 'cottoncordel20',\n  color: 'yellow'\n}, {\n  brand: 'rebel1',\n  color: 'red'\n}, {\n  brand: 'rebel2',\n  color: 'green'\n}, {\n  brand: 'rebel3',\n  color: 'red'\n}, {\n  brand: 'rebel4',\n  color: 'white'\n}, {\n  brand: 'rebel5',\n  color: 'b;ack'\n}, {\n  brand: 'rebel6',\n  color: 'yellow'\n}, {\n  brand: 'rebel7',\n  color: 'yellow'\n}, {\n  brand: 'rebel8',\n  color: 'white'\n}, {\n  brand: 'rebel9',\n  color: 'yellow'\n}, {\n  brand: 'rebel10',\n  color: 'yellow'\n}, {\n  brand: 'rebel11',\n  color: 'red'\n}, {\n  brand: 'rebel12',\n  color: 'white'\n}, {\n  brand: 'rebel13',\n  color: 'green'\n}, {\n  brand: 'rebel14',\n  color: 'green'\n}, {\n  brand: 'rebel15',\n  color: 'green'\n}, {\n  brand: 'rebel16',\n  color: 'red'\n}, {\n  brand: 'rebel17',\n  color: 'yellow'\n}, {\n  brand: 'rebel18',\n  color: 'blue'\n}, {\n  brand: 'rebel19',\n  color: 'black'\n}, {\n  brand: 'rebel20',\n  color: 'blue'\n}, {\n  brand: 'mepps1',\n  color: 'red'\n}, {\n  brand: 'mepps2',\n  color: 'white'\n}, {\n  brand: 'mepps3',\n  color: 'black'\n}, {\n  brand: 'mepps4',\n  color: 'red'\n}, {\n  brand: 'mepps5',\n  color: 'black'\n}, {\n  brand: 'mepps6',\n  color: 'white'\n}, {\n  brand: 'mepps7',\n  color: 'white'\n}, {\n  brand: 'mepps8',\n  color: 'yellow'\n}, {\n  brand: 'mepps9',\n  color: 'blue'\n}, {\n  brand: 'mepps10',\n  color: 'white'\n}, {\n  brand: 'mepps11',\n  color: 'yellow'\n}, {\n  brand: 'mepps12',\n  color: 'red'\n}, {\n  brand: 'mepps13',\n  color: 'red'\n}, {\n  brand: 'mepps14',\n  color: 'white'\n}, {\n  brand: 'mepps15',\n  color: 'b;ack'\n}, {\n  brand: 'mepps16',\n  color: 'black'\n}, {\n  brand: 'mepps17',\n  color: 'red'\n}, {\n  brand: 'mepps18',\n  color: 'black'\n}, {\n  brand: 'mepps19',\n  color: 'green'\n}, {\n  brand: 'mepps20',\n  color: 'red'\n}];\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getProducts = () => {\n  const products = _.times(100, index => {\n    const color = imageColorMap.find(i => i.brand === brandAndImage[index].image.replace('.jpg', '')).color; // console.log(color);\n\n    return {\n      id: index,\n      isAdvert: false,\n      name: faker.commerce.productName(),\n      price: parseFloat(faker.commerce.price()),\n      brand: brandAndImage[index].brand,\n      image: brandAndImage[index].image,\n      color: color,\n      size: getRandomInt(3, 20),\n      weight: getRandomInt(4, 40),\n      shortDescription: faker.lorem.words(),\n      modelNum: faker.random.number(),\n      delivery: [faker.address.country(), faker.address.country(), faker.address.country()].join(', '),\n      description: faker.lorem.paragraph().split('.', 2).join('.') + '.'\n    };\n  }).sort((a, b) => 0.5 - Math.random());\n\n  return products;\n};\n\nconst advertisements = _.times(10, index => ({\n  id: index,\n  isAdvert: true,\n  name: faker.commerce.productName(),\n  image: faker.image.business(),\n  description: faker.lorem.paragraph().split('.', 3).join('.') + '.',\n  link1: faker.internet.url(),\n  link2: faker.internet.url(),\n  time: faker.date.recent()\n}));\n\nexport const getProductsData = params => {\n  //params = { page: { index: 0, size: 15 }, filter: 'mepps', sort: {key:'price', direction:'asc'} };\n  let products = getProducts();\n  if (params && 'filter' in params && params.filter.brand !== 'none') products = products.filter(product => product.brand === params.filter.brand);\n  if (params && 'filter' in params && params.filter.color !== 'none') products = products.filter(product => product.color === params.filter.color);\n\n  if (params && 'sort' in params && params.sort.key !== 'none') {\n    function compare(a, b) {\n      if (a[params.sort.key] < b[params.sort.key]) return -1;\n      if (a[params.sort.key] > b[params.sort.key]) return 1;\n      return 0;\n    }\n\n    products = products.sort(compare);\n    if (params.sort.direction === 'desc') products = products.reverse();\n  }\n\n  if (params && 'page' in params) {\n    products = products.slice(parseInt(params.page.index), parseInt(params.page.index) + parseInt(params.page.size));\n  }\n\n  return products;\n};\nexport const getProductData = id => {\n  let products = getProducts();\n  let product = {};\n  id = parseInt(id);\n  if (!Number.isNaN(id) && products.length > id) product = products.find(product => product.id === id);\n  return product;\n};\nexport const getAdvertisementsData = () => advertisements;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/eshop-page/src/fakebackend/data.js"],"names":["faker","_","config","brandAndImage","flatten","times","i","map","brand","j","image","imageColorMap","color","getRandomInt","min","max","Math","ceil","floor","random","getProducts","products","index","find","replace","id","isAdvert","name","commerce","productName","price","parseFloat","size","weight","shortDescription","lorem","words","modelNum","number","delivery","address","country","join","description","paragraph","split","sort","a","b","advertisements","business","link1","internet","url","link2","time","date","recent","getProductsData","params","filter","product","key","compare","direction","reverse","slice","parseInt","page","getProductData","Number","isNaN","length","getAdvertisementsData"],"mappings":"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","sourcesContent":["import faker from 'faker';\nimport _ from 'lodash';\nimport { config } from '../services/config';\n\nconst brandAndImage = _.flatten(\n  _.times(20, i => {\n    return ['rapala', 'heddon', 'rebel', 'cottoncordel', 'mepps'].map(\n      (brand, j) => {\n        return { brand, image: `${brand}${i + 1}.jpg` };\n      },\n    );\n  }),\n);\n\nconst imageColorMap = [\n  { brand: 'rapala1', color: 'white' },\n  { brand: 'rapala2', color: 'yellow' },\n  { brand: 'rapala3', color: 'yellow' },\n  { brand: 'rapala4', color: 'yellow' },\n  { brand: 'rapala5', color: 'red' },\n  { brand: 'rapala6', color: 'yellow' },\n  { brand: 'rapala7', color: 'green' },\n  { brand: 'rapala8', color: 'blue' },\n  { brand: 'rapala9', color: 'brown' },\n  { brand: 'rapala10', color: 'blue' },\n  { brand: 'rapala11', color: 'blue' },\n  { brand: 'rapala12', color: 'green' },\n  { brand: 'rapala13', color: 'green' },\n  { brand: 'rapala14', color: 'red' },\n  { brand: 'rapala15', color: 'green' },\n  { brand: 'rapala16', color: 'green' },\n  { brand: 'rapala17', color: 'green' },\n  { brand: 'rapala18', color: 'white' },\n  { brand: 'rapala19', color: 'green' },\n  { brand: 'rapala20', color: 'green' },\n  { brand: 'heddon1', color: 'green' },\n  { brand: 'heddon2', color: 'white' },\n  { brand: 'heddon3', color: 'white' },\n  { brand: 'heddon4', color: 'white' },\n  { brand: 'heddon5', color: 'yellow' },\n  { brand: 'heddon6', color: 'red' },\n  { brand: 'heddon7', color: 'white' },\n  { brand: 'heddon8', color: 'red' },\n  { brand: 'heddon9', color: 'black' },\n  { brand: 'heddon10', color: 'red' },\n  { brand: 'heddon11', color: 'yellow' },\n  { brand: 'heddon12', color: 'white' },\n  { brand: 'heddon13', color: 'white' },\n  { brand: 'heddon14', color: 'red' },\n  { brand: 'heddon15', color: 'white' },\n  { brand: 'heddon16', color: 'brown' },\n  { brand: 'heddon17', color: 'black' },\n  { brand: 'heddon18', color: 'yellow' },\n  { brand: 'heddon19', color: 'white' },\n  { brand: 'heddon20', color: 'green' },\n  { brand: 'cottoncordel1', color: 'white' },\n  { brand: 'cottoncordel2', color: 'green' },\n  { brand: 'cottoncordel3', color: 'yellow' },\n  { brand: 'cottoncordel4', color: 'white' },\n  { brand: 'cottoncordel5', color: 'green' },\n  { brand: 'cottoncordel6', color: 'white' },\n  { brand: 'cottoncordel7', color: 'blue' },\n  { brand: 'cottoncordel8', color: 'white' },\n  { brand: 'cottoncordel9', color: 'yellow' },\n  { brand: 'cottoncordel10', color: 'white' },\n  { brand: 'cottoncordel11', color: 'green' },\n  { brand: 'cottoncordel12', color: 'white' },\n  { brand: 'cottoncordel13', color: 'green' },\n  { brand: 'cottoncordel14', color: 'green' },\n  { brand: 'cottoncordel15', color: 'white' },\n  { brand: 'cottoncordel16', color: 'yellow' },\n  { brand: 'cottoncordel17', color: 'red' },\n  { brand: 'cottoncordel18', color: 'red' },\n  { brand: 'cottoncordel19', color: 'white' },\n  { brand: 'cottoncordel20', color: 'yellow' },\n  { brand: 'rebel1', color: 'red' },\n  { brand: 'rebel2', color: 'green' },\n  { brand: 'rebel3', color: 'red' },\n  { brand: 'rebel4', color: 'white' },\n  { brand: 'rebel5', color: 'b;ack' },\n  { brand: 'rebel6', color: 'yellow' },\n  { brand: 'rebel7', color: 'yellow' },\n  { brand: 'rebel8', color: 'white' },\n  { brand: 'rebel9', color: 'yellow' },\n  { brand: 'rebel10', color: 'yellow' },\n  { brand: 'rebel11', color: 'red' },\n  { brand: 'rebel12', color: 'white' },\n  { brand: 'rebel13', color: 'green' },\n  { brand: 'rebel14', color: 'green' },\n  { brand: 'rebel15', color: 'green' },\n  { brand: 'rebel16', color: 'red' },\n  { brand: 'rebel17', color: 'yellow' },\n  { brand: 'rebel18', color: 'blue' },\n  { brand: 'rebel19', color: 'black' },\n  { brand: 'rebel20', color: 'blue' },\n  { brand: 'mepps1', color: 'red' },\n  { brand: 'mepps2', color: 'white' },\n  { brand: 'mepps3', color: 'black' },\n  { brand: 'mepps4', color: 'red' },\n  { brand: 'mepps5', color: 'black' },\n  { brand: 'mepps6', color: 'white' },\n  { brand: 'mepps7', color: 'white' },\n  { brand: 'mepps8', color: 'yellow' },\n  { brand: 'mepps9', color: 'blue' },\n  { brand: 'mepps10', color: 'white' },\n  { brand: 'mepps11', color: 'yellow' },\n  { brand: 'mepps12', color: 'red' },\n  { brand: 'mepps13', color: 'red' },\n  { brand: 'mepps14', color: 'white' },\n  { brand: 'mepps15', color: 'b;ack' },\n  { brand: 'mepps16', color: 'black' },\n  { brand: 'mepps17', color: 'red' },\n  { brand: 'mepps18', color: 'black' },\n  { brand: 'mepps19', color: 'green' },\n  { brand: 'mepps20', color: 'red' },\n];\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getProducts = () => {\n  const products = _.times(100, index => {\n    const color = imageColorMap.find(\n      i => i.brand === brandAndImage[index].image.replace('.jpg', ''),\n    ).color;\n    // console.log(color);\n    return {\n      id: index,\n      isAdvert: false,\n      name: faker.commerce.productName(),\n      price: parseFloat(faker.commerce.price()),\n      brand: brandAndImage[index].brand,\n      image: brandAndImage[index].image,\n      color: color,\n      size: getRandomInt(3, 20),\n      weight: getRandomInt(4, 40),\n      shortDescription: faker.lorem.words(),\n      modelNum: faker.random.number(),\n      delivery: [\n        faker.address.country(),\n        faker.address.country(),\n        faker.address.country(),\n      ].join(', '),\n      description:\n        faker.lorem\n          .paragraph()\n          .split('.', 2)\n          .join('.') + '.',\n    };\n  }).sort((a, b) => 0.5 - Math.random());\n  return products;\n};\n\nconst advertisements = _.times(10, index => ({\n  id: index,\n  isAdvert: true,\n  name: faker.commerce.productName(),\n  image: faker.image.business(),\n  description:\n    faker.lorem\n      .paragraph()\n      .split('.', 3)\n      .join('.') + '.',\n  link1: faker.internet.url(),\n  link2: faker.internet.url(),\n  time: faker.date.recent(),\n}));\n\nexport const getProductsData = params => {\n  //params = { page: { index: 0, size: 15 }, filter: 'mepps', sort: {key:'price', direction:'asc'} };\n  let products = getProducts();\n\n  if (params && 'filter' in params && params.filter.brand !== 'none')\n    products = products.filter(\n      product => product.brand === params.filter.brand,\n    );\n\n  if (params && 'filter' in params && params.filter.color !== 'none')\n    products = products.filter(\n      product => product.color === params.filter.color,\n    );\n\n  if (params && 'sort' in params && params.sort.key !== 'none') {\n    function compare(a, b) {\n      if (a[params.sort.key] < b[params.sort.key]) return -1;\n      if (a[params.sort.key] > b[params.sort.key]) return 1;\n      return 0;\n    }\n    products = products.sort(compare);\n    if (params.sort.direction === 'desc') products = products.reverse();\n  }\n\n  if (params && 'page' in params) {\n    products = products.slice(\n      parseInt(params.page.index),\n      parseInt(params.page.index) + parseInt(params.page.size),\n    );\n  }\n\n  return products;\n};\nexport const getProductData = id => {\n  let products = getProducts();\n  let product = {};\n  id = parseInt(id);\n\n  if (!Number.isNaN(id) && products.length > id)\n    product = products.find(product => product.id === id);\n\n  return product;\n};\nexport const getAdvertisementsData = () => advertisements;\n"]},"metadata":{},"sourceType":"module"}