{"ast":null,"code":"export const insertAdvert = (products, adverts, insertAtIndex) => {\n  let advertIndex = 0;\n  let resultArr = [];\n  const justProducts = products.filter(product => !product.isAdvert);\n  if (justProducts.length <= insertAtIndex) return justProducts;\n\n  while (justProducts.length > 0) {\n    // 2 same adds in the row\n    while (adverts.length > advertIndex + 1 && adverts[advertIndex].id === adverts[advertIndex + 1].id) advertIndex++; // 0,1,2..9,0,1,2\n\n\n    adverts.length <= advertIndex + 1 ? advertIndex = 0 : advertIndex++; //index is calculated\n\n    const chunk = justProducts.splice(0, insertAtIndex);\n    if (chunk.length === insertAtIndex) resultArr = resultArr.concat(chunk, [adverts[advertIndex]]);\n  }\n\n  return resultArr;\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/eshop-page/src/utils/index.js"],"names":["insertAdvert","products","adverts","insertAtIndex","advertIndex","resultArr","justProducts","filter","product","isAdvert","length","id","chunk","splice","concat"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,aAApB,KAAsC;AAChE,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,QAAMC,YAAY,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,OAAO,IAAI,CAACA,OAAO,CAACC,QAApC,CAArB;AAEA,MAAIH,YAAY,CAACI,MAAb,IAAuBP,aAA3B,EAA0C,OAAOG,YAAP;;AAE1C,SAAOA,YAAY,CAACI,MAAb,GAAsB,CAA7B,EAAgC;AAC9B;AACA,WACER,OAAO,CAACQ,MAAR,GAAiBN,WAAW,GAAG,CAA/B,IACAF,OAAO,CAACE,WAAD,CAAP,CAAqBO,EAArB,KAA4BT,OAAO,CAACE,WAAW,GAAG,CAAf,CAAP,CAAyBO,EAFvD,EAIEP,WAAW,GANiB,CAO9B;;;AACAF,IAAAA,OAAO,CAACQ,MAAR,IAAkBN,WAAW,GAAG,CAAhC,GAAqCA,WAAW,GAAG,CAAnD,GAAwDA,WAAW,EAAnE,CAR8B,CAU9B;;AACA,UAAMQ,KAAK,GAAGN,YAAY,CAACO,MAAb,CAAoB,CAApB,EAAuBV,aAAvB,CAAd;AACA,QAAIS,KAAK,CAACF,MAAN,KAAiBP,aAArB,EACEE,SAAS,GAAGA,SAAS,CAACS,MAAV,CAAiBF,KAAjB,EAAwB,CAACV,OAAO,CAACE,WAAD,CAAR,CAAxB,CAAZ;AACH;;AACD,SAAOC,SAAP;AACD,CAvBM","sourcesContent":["export const insertAdvert = (products, adverts, insertAtIndex) => {\n  let advertIndex = 0;\n  let resultArr = [];\n  const justProducts = products.filter(product => !product.isAdvert);\n\n  if (justProducts.length <= insertAtIndex) return justProducts;\n\n  while (justProducts.length > 0) {\n    // 2 same adds in the row\n    while (\n      adverts.length > advertIndex + 1 &&\n      adverts[advertIndex].id === adverts[advertIndex + 1].id\n    )\n      advertIndex++;\n    // 0,1,2..9,0,1,2\n    adverts.length <= advertIndex + 1 ? (advertIndex = 0) : advertIndex++;\n\n    //index is calculated\n    const chunk = justProducts.splice(0, insertAtIndex);\n    if (chunk.length === insertAtIndex)\n      resultArr = resultArr.concat(chunk, [adverts[advertIndex]]);\n  }\n  return resultArr;\n};\n"]},"metadata":{},"sourceType":"module"}