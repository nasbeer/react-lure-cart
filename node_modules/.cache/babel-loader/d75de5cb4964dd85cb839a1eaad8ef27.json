{"ast":null,"code":"import _slicedToArray from \"/Applications/MAMP/htdocs/react-lure-cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-lure-cart/src/pages/Login/Login.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport * as BForm from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { config } from '../../services/config';\nimport { setGoogleUser, registerLocalUser, loginLocalUser, redirectAfterLogin } from '../../store/actions/auth';\nimport { showToast } from '../../store/actions/toast';\nimport './styles.css';\nexport const DisplayFormikState = props => React.createElement(\"div\", {\n  style: {\n    margin: '1rem 0'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  style: {\n    fontFamily: 'monospace'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"pre\", {\n  style: {\n    background: '#f6f8fa',\n    fontSize: '.65rem',\n    padding: '.5rem'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"props\"), \" = \", JSON.stringify(props, null, 2)));\nconst registerSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Password must be 2 characters at minimum.').max(10, 'Password must be 10 characters at maximum.').required('Required'),\n  name: Yup.string().min(2, 'Name must be 2 characters at minimum.').max(10, 'Name must be 10 characters at maximum.').required('Required'),\n  repeatPassword: Yup.string().when('password', {\n    is: val => val && val.length > 0 ? true : false,\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password must be the same')\n  }).required('Required')\n});\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Password must be 2 characters at minimum.').max(10, 'Password must be 10 characters at maximum.').required('Required')\n});\n\nconst Login = ({\n  setGoogleUser,\n  showToast,\n  registerLocalUser,\n  loginLocalUser,\n  redirectAfterLogin,\n  history\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRegister = _useState2[0],\n        setIsRegister = _useState2[1];\n\n  const formik = useRef(null);\n\n  function toggleRegisterClick() {\n    setIsRegister(!isRegister);\n\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  }\n\n  const responseGoogleSuccess = response => {\n    setGoogleUser(response.profileObj);\n\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n\n    redirectAfterLogin(() => history.push('/products'));\n  };\n\n  const responseGoogleFail = response => {\n    showToast({\n      title: 'Error',\n      text: \"Error loging in with Google: \".concat(response.error, \".\")\n    });\n\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    sm: 8,\n    md: 6,\n    lg: 4,\n    className: \"mx-auto mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleRegisterClick,\n    variant: \"outline-primary\",\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, isRegister ? 'Login' : 'Register'), React.createElement(\"h4\", {\n    className: \"card-title mb-4 mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(Formik, {\n    ref: formik,\n    initialValues: isRegister ? {\n      email: '',\n      password: '',\n      name: '',\n      repeatPassword: ''\n    } : {\n      email: '',\n      password: ''\n    },\n    validationSchema: isRegister ? registerSchema : loginSchema,\n    onSubmit: (values, actions) => {\n      setTimeout(() => {\n        // alert(JSON.stringify(values, null, 2));\n        if ('name' in values) registerLocalUser(values);else loginLocalUser(values);\n        actions.setSubmitting(false);\n        actions.resetForm();\n        redirectAfterLogin(() => history.push('/products'));\n      }, 1000);\n    },\n    onChange: e => console.log(e),\n    render: props => {\n      const handleSubmit = props.handleSubmit,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            values = props.values,\n            touched = props.touched,\n            isValid = props.isValid,\n            errors = props.errors,\n            isSubmitting = props.isSubmitting;\n      return React.createElement(React.Fragment, null, React.createElement(BForm, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, isRegister && React.createElement(BForm.Group, {\n        controlId: \"validationFormik1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(BForm.Control, {\n        name: \"name\",\n        type: \"input\",\n        placeholder: \"Name\",\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: touched.name && !!errors.name,\n        isValid: touched.name && !errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(BForm.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(BForm.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, errors.name)), React.createElement(BForm.Group, {\n        controlId: \"validationFormik2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(BForm.Control, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: touched.email && !!errors.email,\n        isValid: touched.email && !errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(BForm.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(BForm.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, errors.email)), React.createElement(BForm.Group, {\n        controlId: \"validationFormik3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(BForm.Control, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: touched.password && !!errors.password,\n        isValid: touched.password && !errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(BForm.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(BForm.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, errors.password)), isRegister && React.createElement(BForm.Group, {\n        controlId: \"validationFormik4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(BForm.Control, {\n        name: \"repeatPassword\",\n        type: \"password\",\n        placeholder: \"Repeat Password\",\n        value: values.repeatPassword,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: touched.repeatPassword && !!errors.repeatPassword,\n        isValid: touched.repeatPassword && !errors.repeatPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(BForm.Control.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Looks good!\"), React.createElement(BForm.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, errors.repeatPassword)), React.createElement(BForm.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(BForm.Group, {\n        as: Col,\n        md: \"6\",\n        controlId: \"validationFormik3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(BForm.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"btn-block\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, isSubmitting ? 'Please wait...' : isRegister ? 'Register' : 'Login'))), React.createElement(\"div\", {\n        className: \"col-md-6 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"small\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Forgot password?\"))), React.createElement(BForm.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 text-center small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Test email: default@gmail.com\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Test password: password\")))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))));\n};\n\nexport default connect(state => ({}), {\n  setGoogleUser,\n  showToast,\n  registerLocalUser,\n  loginLocalUser,\n  redirectAfterLogin\n})(withRouter(Login));\n/*\nprofileObj:\nemail: \"api@gmail.com\"\nfamilyName: \"Kralc\"\ngivenName: \"rko\"\ngoogleId: \"25350571\"\nimageUrl: \"https://lh6.googleusercontent.com/-6ZAIGkgvuaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc9E5uex_lbFBctbj8KYQ6cLt5WLg/s96-c/photo.jpg\"\nname: \"rko Kral\n*/","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-lure-cart/src/pages/Login/Login.js"],"names":["React","useEffect","useState","useRef","Formik","Form","Field","Yup","GoogleLogin","connect","withRouter","BForm","Row","Col","Button","config","setGoogleUser","registerLocalUser","loginLocalUser","redirectAfterLogin","showToast","DisplayFormikState","props","margin","fontFamily","background","fontSize","padding","JSON","stringify","registerSchema","object","shape","email","string","required","password","min","max","name","repeatPassword","when","is","val","length","then","oneOf","ref","loginSchema","Login","history","isRegister","setIsRegister","formik","toggleRegisterClick","current","resetForm","responseGoogleSuccess","response","profileObj","push","responseGoogleFail","title","text","error","values","actions","setTimeout","setSubmitting","e","console","log","handleSubmit","handleChange","handleBlur","touched","isValid","errors","isSubmitting","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport * as BForm from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport { config } from '../../services/config';\nimport {\n  setGoogleUser,\n  registerLocalUser,\n  loginLocalUser,\n  redirectAfterLogin,\n} from '../../store/actions/auth';\nimport { showToast } from '../../store/actions/toast';\n\nimport './styles.css';\n\nexport const DisplayFormikState = props => (\n  <div style={{ margin: '1rem 0' }}>\n    <h3 style={{ fontFamily: 'monospace' }} />\n    <pre\n      style={{\n        background: '#f6f8fa',\n        fontSize: '.65rem',\n        padding: '.5rem',\n      }}\n    >\n      <strong>props</strong> = {JSON.stringify(props, null, 2)}\n    </pre>\n  </div>\n);\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Password must be 2 characters at minimum.')\n    .max(10, 'Password must be 10 characters at maximum.')\n    .required('Required'),\n  name: Yup.string()\n    .min(2, 'Name must be 2 characters at minimum.')\n    .max(10, 'Name must be 10 characters at maximum.')\n    .required('Required'),\n  repeatPassword: Yup.string()\n    .when('password', {\n      is: val => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf(\n        [Yup.ref('password')],\n        'Both password must be the same',\n      ),\n    })\n    .required('Required'),\n});\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Password must be 2 characters at minimum.')\n    .max(10, 'Password must be 10 characters at maximum.')\n    .required('Required'),\n});\n\nconst Login = ({\n  setGoogleUser,\n  showToast,\n  registerLocalUser,\n  loginLocalUser,\n  redirectAfterLogin,\n  history,\n}) => {\n  const [isRegister, setIsRegister] = useState(false);\n  const formik = useRef(null);\n\n  function toggleRegisterClick() {\n    setIsRegister(!isRegister);\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  }\n\n  const responseGoogleSuccess = response => {\n    setGoogleUser(response.profileObj);\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n    redirectAfterLogin(() => history.push('/products'));\n  };\n\n  const responseGoogleFail = response => {\n    showToast({\n      title: 'Error',\n      text: `Error loging in with Google: ${response.error}.`,\n    });\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  };\n\n  return (\n    <Row>\n      <Col xs={12} sm={8} md={6} lg={4} className=\"mx-auto mt-5\">\n        <div className=\"card\">\n          <article className=\"card-body\">\n            <Button\n              onClick={toggleRegisterClick}\n              variant=\"outline-primary\"\n              className=\"float-right\"\n            >\n              {isRegister ? 'Login' : 'Register'}\n            </Button>\n            <h4 className=\"card-title mb-4 mt-1\">Sign in</h4>\n            {/* <p>\n              <GoogleLogin\n                clientId={config.clientId}\n                render={renderProps => (\n                  <Button\n                    id=\"googleButton\"\n                    variant=\"outline-primary\"\n                    className=\"btn-block\"\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                  >\n                    {' '}\n                    <i className=\"fa fa-google\"></i>   Login with Google\n                  </Button>\n                )}\n                buttonText=\"Login\"\n                onSuccess={responseGoogleSuccess}\n                onFailure={responseGoogleFail}\n                cookiePolicy={'single_host_origin'}\n              />\n            </p> */}\n            <hr />\n\n            <Formik\n              ref={formik}\n              initialValues={\n                isRegister\n                  ? {\n                      email: '',\n                      password: '',\n                      name: '',\n                      repeatPassword: '',\n                    }\n                  : {\n                      email: '',\n                      password: '',\n                    }\n              }\n              validationSchema={isRegister ? registerSchema : loginSchema}\n              onSubmit={(values, actions) => {\n                setTimeout(() => {\n                  // alert(JSON.stringify(values, null, 2));\n                  if ('name' in values) registerLocalUser(values);\n                  else loginLocalUser(values);\n                  actions.setSubmitting(false);\n                  actions.resetForm();\n                  redirectAfterLogin(() => history.push('/products'));\n                }, 1000);\n              }}\n              onChange={e => console.log(e)}\n              render={props => {\n                const {\n                  handleSubmit,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  touched,\n                  isValid,\n                  errors,\n                  isSubmitting,\n                } = props;\n                return (\n                  <>\n                    <BForm noValidate onSubmit={handleSubmit}>\n                      {isRegister && (\n                        <BForm.Group controlId=\"validationFormik1\">\n                          <BForm.Control\n                            name=\"name\"\n                            type=\"input\"\n                            placeholder=\"Name\"\n                            value={values.name}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            isInvalid={touched.name && !!errors.name}\n                            isValid={touched.name && !errors.name}\n                          />\n                          <BForm.Control.Feedback>\n                            Looks good!\n                          </BForm.Control.Feedback>\n                          <BForm.Control.Feedback type=\"invalid\">\n                            {errors.name}\n                          </BForm.Control.Feedback>\n                        </BForm.Group>\n                      )}\n                      <BForm.Group controlId=\"validationFormik2\">\n                        <BForm.Control\n                          name=\"email\"\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          value={values.email}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.email && !!errors.email}\n                          isValid={touched.email && !errors.email}\n                        />\n                        <BForm.Control.Feedback>\n                          Looks good!\n                        </BForm.Control.Feedback>\n                        <BForm.Control.Feedback type=\"invalid\">\n                          {errors.email}\n                        </BForm.Control.Feedback>\n                      </BForm.Group>\n                      <BForm.Group controlId=\"validationFormik3\">\n                        <BForm.Control\n                          name=\"password\"\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          value={values.password}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={touched.password && !!errors.password}\n                          isValid={touched.password && !errors.password}\n                        />\n                        <BForm.Control.Feedback>\n                          Looks good!\n                        </BForm.Control.Feedback>\n                        <BForm.Control.Feedback type=\"invalid\">\n                          {errors.password}\n                        </BForm.Control.Feedback>\n                      </BForm.Group>\n                      {isRegister && (\n                        <BForm.Group controlId=\"validationFormik4\">\n                          <BForm.Control\n                            name=\"repeatPassword\"\n                            type=\"password\"\n                            placeholder=\"Repeat Password\"\n                            value={values.repeatPassword}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            isInvalid={\n                              touched.repeatPassword && !!errors.repeatPassword\n                            }\n                            isValid={\n                              touched.repeatPassword && !errors.repeatPassword\n                            }\n                          />\n                          <BForm.Control.Feedback>\n                            Looks good!\n                          </BForm.Control.Feedback>\n                          <BForm.Control.Feedback type=\"invalid\">\n                            {errors.repeatPassword}\n                          </BForm.Control.Feedback>\n                        </BForm.Group>\n                      )}\n                      <BForm.Row>\n                        <BForm.Group\n                          as={Col}\n                          md=\"6\"\n                          controlId=\"validationFormik3\"\n                        >\n                          <BForm.Group>\n                            <Button\n                              type=\"submit\"\n                              className=\"btn-block\"\n                              disabled={isSubmitting}\n                            >\n                              {isSubmitting\n                                ? 'Please wait...'\n                                : isRegister\n                                ? 'Register'\n                                : 'Login'}\n                            </Button>\n                          </BForm.Group>\n                        </BForm.Group>\n                        <div className=\"col-md-6 text-right\">\n                          <a className=\"small\" href=\"#\">\n                            Forgot password?\n                          </a>\n                        </div>\n                      </BForm.Row>\n                      <BForm.Row>\n                        <div className=\"col-12 text-center small\">\n                          <p>Test email: default@gmail.com</p>\n                          <p>Test password: password</p>\n                        </div>\n                      </BForm.Row>\n                    </BForm>\n                    {/* <DisplayFormikState {...props} /> */}\n                  </>\n                );\n              }}\n            />\n          </article>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default connect(\n  state => ({}),\n  {\n    setGoogleUser,\n    showToast,\n    registerLocalUser,\n    loginLocalUser,\n    redirectAfterLogin,\n  },\n)(withRouter(Login));\n/*\nprofileObj:\nemail: \"api@gmail.com\"\nfamilyName: \"Kralc\"\ngivenName: \"rko\"\ngoogleId: \"25350571\"\nimageUrl: \"https://lh6.googleusercontent.com/-6ZAIGkgvuaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc9E5uex_lbFBctbj8KYQ6cLt5WLg/s96-c/photo.jpg\"\nname: \"rko Kral\n*/\n"]},"metadata":{},"sourceType":"module"}